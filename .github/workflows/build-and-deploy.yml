name: Build and Deploy Weather App

on:
  push:
    branches:
      - main  # Trigger only on push to `main` branch

jobs:
  build:
    runs-on: self-hosted  # Use the self-hosted runner for building

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller  # Ensure pyinstaller is installed

      - name: Build binary
        run: |
          echo "Creating binary..."
          pyinstaller --onefile weather.py
          echo "Binary created at dist/weather"

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: weather-build  # Name for the build artifact
          path: dist/weather  # Path to the built binary

  deploy:
    needs: build
    runs-on: self-hosted  # Use the same self-hosted runner for deployment

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: weather-build  # Name of the artifact to download
          path: dist/  # Path to download the artifact to

      - name: Prepare SSH key
        env:
          PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem

      - name: Deploy to server
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "Deploying to $USER@$HOST:/home/Result/"
          scp -o StrictHostKeyChecking=no -i deploy_key.pem dist/weather $USER@$HOST:/home/Result/
          ssh -o StrictHostKeyChecking=no -i deploy_key.pem $USER@$HOST 'systemctl restart weather-app'  # Restart the service

